{"version":3,"sources":["components/UserSuggestion.js","components/UserFirstChoice.js","components/UserResults.js","components/Breakfast.js","components/Lunch.js","components/Dinner.js","components/Snack.js","components/UserInput.js","firebase.js","components/DisplaySavedFoods.js","ApiCalls.js","App.js","serviceWorker.js","index.js"],"names":["UserSuggestion","className","src","this","props","results","recoImage","alt","recoImageAlt","recoFoodTitle","recommendedFood","Component","UserFirstChoice","userImage","userImageAlt","userInput","usersFood","UserResults","checkUserChoice","onClick","subClick","checkReco","handleSave","Breakfast","htmlFor","id","onChange","handleChange","selected","disabled","defaultValue","value","Lunch","Dinner","Snack","UserInput","handleBreakfastClick","handleLunchClick","handleDinnerClick","handleSnackClick","breakfast","lunch","dinner","snack","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","DisplaySavedFoods","deleteActivity","key","database","ref","child","remove","state","foods","on","response","newState","data","val","push","food","setState","map","food1","userFoodName","userFoodOption","food2","userRecoName","userRecoOption","ApiCalls","unsplashCall","query","axios","url","method","responseType","params","client_id","unsplashKey","orientation","then","unsplashUrl","urls","regular","altTag","alt_description","nutritionixCall","sugar","headers","detailed","full_nutrients","sugarAmount","fatAmount","calorieAmount","proteinAmount","carbohydratesAmount","nutObj","common","i","length","attr_id","Math","round","undefined","newObj","sugarValue","event","preventDefault","target","dbRef","firebaseObj","lte","randItem","noOfRes","floor","random","food_name","small","prevProps","prevState","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.92d8935e.chunk.js","sourcesContent":["import React, {Component} from 'react'\n\nclass UserSuggestion extends Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"userSuggestion\">\n\t\t\t\t<div className=\"image\">\n\t\t\t\t\t<img src={this.props.results.recoImage} alt={this.props.results.recoImageAlt} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"text\">\n\t\t\t\t\t<h2>{this.props.results.recoFoodTitle}</h2>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li><span>Fat Amount:</span> {this.props.results.recommendedFood[0]}g</li>\n\t\t\t\t\t\t<li><span>Calories:</span> {this.props.results.recommendedFood[1]} kJ</li>\n\t\t\t\t\t\t<li><span>Sugar:</span> {this.props.results.recommendedFood[2]}g</li>\n\t\t\t\t\t\t<li><span>Protein:</span> {this.props.results.recommendedFood[3]}g</li>\n\t\t\t\t\t\t<li><span>Carbohydrates:</span> {this.props.results.recommendedFood[4]}g</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default UserSuggestion","import React, {Component, Fragment} from 'react'\n\nclass UserFirstChoice extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t\t<div className=\"image\">\n\t\t\t\t\t\t<img src={this.props.results.userImage} alt={this.props.results.userImageAlt} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"text\">\n\t\t\t\t\t\t<h2>{this.props.results.userInput}</h2>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li><span>Fat Amount: </span>{this.props.results.usersFood[0]}g</li>\n\t\t\t\t\t\t\t<li><span>Calories:</span> {this.props.results.usersFood[1]}kJ</li>\n\t\t\t\t\t\t\t<li><span>Sugar: </span>{this.props.results.usersFood[2]}g</li>\n\t\t\t\t\t\t\t<li><span>Protein: </span>{this.props.results.usersFood[3]}g</li>\n\t\t\t\t\t\t\t<li><span>Carbohydrates:</span> {this.props.results.usersFood[4]}g</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t)\n\t}\n}\n\nexport default UserFirstChoice","import React, {Component, Fragment} from 'react'\nimport UserSuggestion from './UserSuggestion'\nimport UserFirstChoice from './UserFirstChoice'\n\nclass UserResults extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t{this.props.results.checkUserChoice ? (\n\t\t\t\t<div className=\"button\">\n\t\t\t\t\t<button className=\"subBtn\" onClick={this.props.subClick}>\n\t\t\t\t\tGive me a substitute\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t) : null}\n\t\t\t\t<div className=\"userResults\">\n\t\n\t\t\t\t\t<div className=\"userSelection\">\n\t\t\t\t\t\t{this.props.results.checkUserChoice ? (\n\t\t\t\t\t\t\t<UserFirstChoice\n\t\t\t\t\t\t\t\tresults={this.props.results}\n\t\t\t\t\t\t\t\tsubClick={this.props.subClick}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</div>\n\t\n\t\t\t\t\t{this.props.results.checkReco ? (\n\t\t\t\t\t\t<UserSuggestion\n\t\t\t\t\t\t\thandleSave={this.props.handleSave}\n\t\t\t\t\t\t\tresults={this.props.results}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nexport default UserResults\n\n","import React, { Component, Fragment } from \"react\";\nimport UserResults from \"./UserResults\";\n\nclass Breakfast extends Component {\n  render() {\n    return (\n\t\t<Fragment>\n\t\t\t<form>\n\t\t\t\t<label htmlFor=\"foodMenu\">Select what you would Like</label>\n\t\t\t\t<select id=\"foodMenu\" onChange={this.props.handleChange}>\n\t\t\t\t\t<option selected disabled defaultValue>\n\t\t\t\t\t\tChoose your food\n\t\t\t\t\t</option>\n\t\t\t\t\t<option value=\"oreos\">Oreos</option>\n\t\t\t\t\t<option value=\"chocolate waffles\">Chocolate Waffles</option>\n\t\t\t\t\t<option value=\"captain crunch cereal\">\n\t\t\t\t\t\tCaptain Crunch Cereal\n\t\t\t\t\t</option>\n\t\t\t\t\t<option value=\"nutella sandwich\">Nutella Sandwich</option>\n\t\t\t\t\t<option value=\"yogurt\">Yogurt</option>\n\t\t\t\t\t<option value=\"muffin\">Muffin</option>\n\t\t\t\t\t<option value=\"egg tart\">Egg Tart</option>\n\t\t\t\t\t<option value=\"banana bread\">Banana Bread</option>\n\t\t\t\t\t<option value=\"breakfast drink\">Breakfast Drink</option>\n\t\t\t\t\t<option value=\"cake\">Cake</option>\n\t\t\t\t</select>\n\t\t\t</form>\n\t\t\t<UserResults\n\t\t\t\tresults={this.props.results}\n\t\t\t\tsubClick={this.props.subClick}\n\t\t\t/>\n\t\t</Fragment>\n\t\t);\n\t}\n}\n\nexport default Breakfast;\n","import React, { Component, Fragment } from \"react\";\nimport UserResults from \"./UserResults\";\n\nclass Lunch extends Component {\n  render() {\n    return (\n      <Fragment>\n        <form className=\"foodSelector\">\n          <label htmlFor=\"foodMenu\">Select what you would Like</label>\n          <select id=\"foodMenu\" onChange={this.props.handleChange}>\n          <option selected disabled value>\n              Choose your food\n            </option>\n            <option value=\"teriyaki steak\">Teriyaki Steak</option>\n            <option value=\"jelly sandwich\">Jelly Sandwich</option>\n            <option value=\"baconator\">Baconator</option>\n            <option value=\"thai noodles\">Thai Noodles</option>\n            <option value=\"Caesar Salad\">Caesar Salad</option>\n            <option value=\"apple dumplings\">Apple Dumplings</option>\n            <option value=\"grilled peach\">Grilled Peaches</option>\n            <option value=\"mochi\">Mochi</option>\n            <option value=\"pork bbq burrito\">Pork BBQ Burrito</option>\n            <option value=\"cake\">Cake</option>\n          </select>\n        </form>\n        <UserResults\n          results={this.props.results}\n          subClick={this.props.subClick}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default Lunch;\n","import React, { Component, Fragment } from \"react\";\nimport UserResults from \"./UserResults\";\n\nclass Dinner extends Component {\n  render() {\n    return (\n      <Fragment>\n        <form>\n          <label htmlFor=\"foodMenu\">Select what you would Like</label>\n          <select id=\"foodMenu\" onChange={this.props.handleChange}>\n          <option selected disabled value>\n              Choose your food\n            </option>\n            <option value=\"bbq ribs\">BBQ Ribs</option>\n            <option value=\"walnut shrimp\">Walnut Shrimp</option>\n            <option value=\"sesame chicken\">Sesame Chicken</option>\n            <option value=\"vermicelli noodles with pork\">Vermicelli Noodles with Pork</option>\n            <option value=\"jelly donuts\">Jelly Donuts</option>\n            <option value=\"cinnamon bun\">Cinnamon Buns</option>\n            <option value=\"fried apple pie\">Fried Apple Pie</option>\n            <option value=\"pulled pork\">Pulled Pork</option>\n            <option value=\"banana split\">Banana Split</option>\n            <option value=\"cake\">Cake</option>\n          </select>\n        </form>\n        <UserResults\n          results={this.props.results}\n          subClick={this.props.subClick}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default Dinner;\n","import React, { Component, Fragment } from \"react\";\nimport UserResults from \"./UserResults\";\n\nclass Snack extends Component {\n  render() {\n    return (\n      <Fragment>\n        <form>\n          <label htmlFor=\"foodMenu\">Select what you would Like</label>\n          <select id=\"foodMenu\" onChange={this.props.handleChange}>\n          <option selected disabled value>\n              Choose your food\n            </option>\n            <option value=\"cheesecake\">Cheesecake</option>\n            <option value=\"candy corn\">Candy Corn</option>\n            <option value=\"ice cream cake\">Ice Cream Sandwiches</option>\n            <option value=\"sweetened iced tea\">Sweetened Iced Tea</option>\n            <option value=\"apple sauce\">Applesauce</option>\n            <option value=\"milkshake\">Milkshake</option>\n            <option value=\"salted caramel pie\">Salted Caramel Pie</option>\n            <option value=\"chocolate milk\">Chocolate Milk</option>\n            <option value=\"vanilla cupcake\">Vanilla Cupcakes</option>\n            <option value=\"cake\">Cake</option>\n          </select>\n        </form>\n        <UserResults\n          results={this.props.results}\n          subClick={this.props.subClick}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default Snack;\n","import React, { Component, Fragment } from \"react\";\nimport Breakfast from './Breakfast';\nimport Lunch from './Lunch';\nimport Dinner from './Dinner';\nimport Snack from './Snack';\n// import UserResults from \"./UserResults\";\n\nclass UserInput extends Component {\n\n  render() {\n    return (\n      <Fragment>\n        <div className=\"userOptions\">\n          <button onClick={this.props.handleBreakfastClick}>Breakfast</button>\n          <button onClick={this.props.handleLunchClick}>Lunch</button>\n          <button onClick={this.props.handleDinnerClick}>Dinner</button>\n          <button onClick={this.props.handleSnackClick}>Snack</button>\n        </div>\n\n        {this.props.results.breakfast ?\n          <Breakfast\n            results={this.props.results}\n            handleChange={this.props.handleChange}\n            subClick={this.props.subClick}\n          />\n          : null}\n\n        {this.props.results.lunch ?\n          <Lunch\n            results={this.props.results}\n            handleChange={this.props.handleChange}\n            subClick={this.props.subClick}\n          />\n          : null}\n\n        {this.props.results.dinner ?\n          <Dinner\n            results={this.props.results}\n            handleChange={this.props.handleChange}\n            subClick={this.props.subClick}\n          />\n          : null}\n\n        {this.props.results.snack ?\n          <Snack\n            results={this.props.results}\n            handleChange={this.props.handleChange}\n            subClick={this.props.subClick}\n          />\n          : null}\n      </Fragment>\n    );\n  }\n}\n\nexport default UserInput;\n","import firebase from 'firebase/app';\nimport 'firebase/database';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBpqlg35893WVbTIvvIrHL3SaFDmxaDFsc\",\n    authDomain: \"abitterparent.firebaseapp.com\",\n    databaseURL: \"https://abitterparent.firebaseio.com\",\n    projectId: \"abitterparent\",\n    storageBucket: \"abitterparent.appspot.com\",\n    messagingSenderId: \"1015830040041\",\n    appId: \"1:1015830040041:web:7edb8b23ec4e7e0e4a8f78\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\n  export default firebase;","import React, {Component, Fragment} from 'react'\nimport firebase from '../firebase'\n\nclass DisplaySavedFoods extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n          foods: [],\n        };\n    }\n\n    componentDidMount() {\n        const dbRef = firebase.database().ref();\n        dbRef.on(\"value\", (response) => {\n          const newState = [];\n          const data = response.val();\n          for (let key in data) {\n            newState.push({\n              food: data[key],\n              key: key,\n            });\n          }\n          this.setState({\n            foods: newState,\n        });\n        });\n    }\n\n    deleteActivity = (key) => {\n        const dbRef = firebase.database().ref();\n        dbRef.child(key).remove();\n    };\n\n    render() {\n        return (\n            <div className=\"showFoodPairs\">\n                <h3>Your Suggestions:</h3>\n                {this.state.foods.map(({ key, food }) => {\n                    return (\n                        <Fragment>\n                            <div key={key} \n                            className=\"food\">\n                                <ul className=\"savedFood text\">\n                                    <li><h2>\n                                        {food.food1.userFoodName}\n                                    </h2></li>\n                                    <li>\n                                        <ul>\n                                            <li><span>Fat Amount:</span> {food.food1.userFoodOption[0]}g</li>\n                                            <li><span>Calories:</span> {food.food1.userFoodOption[1]}kJ</li>\n                                            <li><span>Sugar:</span> {food.food1.userFoodOption[2]}g</li>\n                                            <li><span>Protein:</span> {food.food1.userFoodOption[3]}g</li>\n                                            <li><span>Carbohydrates:</span> {food.food1.userFoodOption[4]}g</li>\n                                        </ul>\n                                    </li>\n                                </ul>\n\n                                <ul className=\"savedFood text\">\n                                    <li><h2>\n                                        {food.food2.userRecoName}\n                                    </h2></li>\n                                    <li>\n                                        <ul>\n                                            <li><span>Fat Amount:</span> {food.food2.userRecoOption[0]}g</li>\n                                            <li><span>Calories:</span> {food.food2.userRecoOption[1]}kJ</li>\n                                            <li><span>Sugar: </span>{food.food2.userRecoOption[2]}g</li>\n                                            <li><span>Protein: </span>{food.food2.userRecoOption[3]}g</li>\n                                            <li><span>Carbohydrates:</span> {food.food2.userRecoOption[4]}g</li>\n                                        </ul>\n                                    </li>\n                                </ul>\n                            </div>\n\n                            <div className=\"button\"><button onClick={() => {\n                            this.deleteActivity(key);\n                            }}>Delete</button></div>\n                        </Fragment>\n                    );\n                })}\n            </div>\n        )\n    }\n}\n\nexport default DisplaySavedFoods","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport UserInput from \"./components/UserInput\";\nimport firebase from \"./firebase\";\nimport DisplaySavedFoods from \"./components/DisplaySavedFoods\";\n\nclass ApiCalls extends Component {\n  constructor() {\n    super();\n    // setting initial state values\n    this.state = {\n      userInput: \"\",\n      recoFoodTitle: \"\",\n      sugarValue: \"\",\n      usersFood: [],\n      recommendedFood: [],\n      checkReco: false,\n      checkUserChoice: false,\n      breakfast: false,\n      lunch: false,\n      dinner: false,\n      snack: false,\n      userImage: \"\",\n      userImageAlt: \"\",\n      recoImage: \"\",\n      recoImageAlt: \"\",\n      firebaseObj: {},\n      // unsplashKey:  'XOIxVf1JifM9_NSItXssxrkEDz917Vsu03WTP2T6nbA',\n      //to swtich between keys when it reaches limit\n      unsplashKey: 'wPc_7irjVjTU9ez7gjehFg6qAyrOd2HEkx_YY397uts',\n    };\n  }\n\n  // function that upon call makes an API request to get the food images\n  unsplashCall = (query) => {\n      axios({\n\t\t\turl: \"https://api.unsplash.com/photos/random\",\n\t\t\tmethod: \"GET\",\n\t\t\tresponseType: \"JSON\",\n\t\t\tparams: {\n\t\t\t\tclient_id: this.state.unsplashKey,\n        query:`${query}`,\n        orientation: \"squarish\"\n    },\n\t\t}).then((response) => {\n\n\t\t\tlet unsplashUrl = response.data.urls.regular;\n\t\t\tlet altTag = response.data.alt_description;\n\n\t\t\tthis.setState({\n\t\t\t\tuserImage: unsplashUrl,\n\t\t\t\tuserImageAlt: altTag,\n\t\t\t});\n\t\t});\n  }\n\n  // function that upon call makes an API request to get information about the food\n  nutritionixCall = (query, sugar) => {\n      axios({\n      url: \"https://trackapi.nutritionix.com/v2/search/instant\",\n      method: \"POST\",\n      responseType: \"JSON\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-app-id\": \"2f61b616\",\n        \"x-app-key\": \"3c2af909b8bc091e21372b59a9e4b835\",\n        \"x-remote-user-id\": \"0\",\n      },\n      data: {\n        query: query,\n        detailed: true,\n        full_nutrients: {\n          \"269\": {\n            \"lte\": sugar\n          }\n        }\n      },\n    })\n    .then((response) => {\n      \n      // variable that contains the response from the API call\n      const nutObj = response.data.common[0].full_nutrients;\n      let sugarAmount;\n      let fatAmount;\n      let calorieAmount;\n      let proteinAmount;\n      let carbohydratesAmount;\n\n      // looping through the response to extract the nutrition values\n      for (let i = 0; i < nutObj.length; i++) {\n        if (nutObj[i].attr_id === 269) {\n          sugarAmount = Math.round(nutObj[i].value);\n        } else if (nutObj[i].attr_id === 204) {\n          fatAmount = Math.round(nutObj[i].value);\n        } else if (nutObj[i].attr_id === 208) {\n          calorieAmount = Math.round(nutObj[i].value);\n        } else if (nutObj[i].attr_id === 203) {\n          proteinAmount = Math.round(nutObj[i].value);\n        } else if (nutObj[i].attr_id === 205) {\n          carbohydratesAmount = Math.round(nutObj[i].value);\n        }\n      }\n\n      // conditional statement to change the value from udefined to 0 for better visual user experience\n      if (fatAmount === undefined) {\n        fatAmount = 0;\n      } else if (calorieAmount === undefined) {\n        calorieAmount = 0;\n      } else if (proteinAmount === undefined) {\n        proteinAmount = 0;\n      } else if (carbohydratesAmount === undefined) {\n        carbohydratesAmount = 0;\n      }\n\n      const newObj = [\n        fatAmount,\n        calorieAmount,\n        sugarAmount,\n        proteinAmount,\n        carbohydratesAmount,\n      ];\n      \n      this.setState({\n        usersFood: newObj,\n        sugarValue: sugarAmount,\n      });\n    })\n  }\n\n\n  handleChange = (event) => {\n  event.preventDefault();\n\n  let userInput = this.state.userInput;\n  let value = event.target.value;\n\n  userInput = value;\n\n  this.setState({\n    userInput: userInput,\n    checkUserChoice: false,\n  });\n  };\n\n  // functions to set the state for sections and render the section when the respective button is clicked\n  handleBreakfastClick = () => {\n    this.setState({\n      breakfast: true,\n      lunch: false,\n      dinner: false,\n      snack: false,\n      checkUserChoice: false,\n      checkReco: false,\n    });\n  };\n  handleLunchClick = () => {\n    this.setState({\n      breakfast: false,\n      lunch: true,\n      dinner: false,\n      snack: false,\n      checkUserChoice: false,\n      checkReco: false,\n    });\n  };\n  handleDinnerClick = () => {\n    this.setState({\n      breakfast: false,\n      lunch: false,\n      dinner: true,\n      snack: false,\n      checkUserChoice: false,\n      checkReco: false,\n    });\n  };\n\n  handleSnackClick = () => {\n    this.setState({\n      breakfast: false,\n      lunch: false,\n      dinner: false,\n      snack: true,\n      checkUserChoice: false,\n      checkReco: false,\n    });\n  };\n\n  // upon the component update, calling the images and nutritions functions\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.userInput !== this.state.userInput) {\n      this.setState({\n        checkReco: false,\n        checkUserChoice: true,\n      });\n\n      this.unsplashCall(this.state.userInput)\n\n      this.nutritionixCall(this.state.userInput, 10000)\n    }\n  }\n\n  // function that pushes the chosen food pair to firebase\n  handleSave = (event) => {\n    event.preventDefault();\n    const dbRef = firebase.database().ref();\n    let userFoodOption = this.state.usersFood;\n    let userRecoOption = this.state.recommendedFood;\n    let userFoodName = this.state.userInput;\n    let userRecoName = this.state.recoFoodTitle;\n\n    const firebaseObj = {\n      food1: { userFoodName, userFoodOption },\n      food2: { userRecoName, userRecoOption },\n    };\n    dbRef.push(firebaseObj);\n  };\n\n  // function that sets state to render the alternative food for the user\n  subClick = () => {\n    this.setState({\n      checkReco: true,\n    });\n\n    // an API call to get the nutrition values for the substitute food that meets the condition of less amount of sugar\n    axios({\n      url: \"https://trackapi.nutritionix.com/v2/search/instant\",\n      method: \"POST\",\n      responseType: \"JSON\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-app-id\": \"2f61b616\",\n        \"x-app-key\": \"3c2af909b8bc091e21372b59a9e4b835\",\n        \"x-remote-user-id\": \"0\",\n      },\n      data: {\n        query: \"vegetables || fruits || grains\",\n        detailed: true,\n        full_nutrients: {\n          \"269\": {\n            lte: this.state.sugarValue - 10,\n          },\n        },\n      },\n    }).then((response) => {\n      let randItem;\n      let noOfRes = this.state.recommendedFood.length;\n      randItem = Math.floor(Math.random() * noOfRes);\n\n      const nutObj = response.data.common[randItem].full_nutrients;\n\n      let sugarAmount;\n      let fatAmount;\n      let calorieAmount;\n      let proteinAmount;\n      let carbohydratesAmount;\n      for (let i = 0; i < nutObj.length; i++) {\n        if (nutObj[i].attr_id === 269) {\n          sugarAmount = Math.round(nutObj[i].value);\n        } else if (nutObj[i].attr_id === 204) {\n          fatAmount = Math.round(nutObj[i].value);\n        } else if (nutObj[i].attr_id === 208) {\n          calorieAmount = Math.round(nutObj[i].value);\n        } else if (nutObj[i].attr_id === 203) {\n          proteinAmount = Math.round(nutObj[i].value);\n        } else if (nutObj[i].attr_id === 205) {\n          carbohydratesAmount = Math.round(nutObj[i].value);\n        }\n      }\n\n      if (fatAmount === undefined) {\n        fatAmount = 0;\n      } else if (calorieAmount === undefined) {\n        calorieAmount = 0;\n      } else if (proteinAmount === undefined) {\n        proteinAmount = 0;\n      } else if (carbohydratesAmount === undefined) {\n        carbohydratesAmount = 0;\n      }\n\n      const newObj = [\n        fatAmount,\n        calorieAmount,\n        sugarAmount,\n        proteinAmount,\n        carbohydratesAmount,\n      ];\n      this.setState({\n        recommendedFood: newObj,\n        recoFoodTitle: response.data.common[randItem].food_name,\n      });      \n    });\n\n    // an API call that returns the image for the substitute food\n    axios({\n      url: 'https://api.unsplash.com/photos/random',\n      method: \"GET\",\n      responseType: \"JSON\",\n      params: {\n        client_id: this.state.unsplashKey,\n        query: this.state.recoFoodTitle,\n        orientation: \"squarish\"\n      },\n    }).then((response) => {\n      \n        let unsplashUrl = response.data.urls.small;\n        let altTag = response.data.alt_description;\n\n        this.setState({\n          recoImage: unsplashUrl,\n          recoImageAlt: altTag,\n        });\n      });\n  };\n  render() {\n    return (\n\t\t\t<div className=\"wrapper\">\n\n\n\t\t\t\t<UserInput\n\t\t\t\t\tresults={this.state}\n\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\tsubClick={this.subClick}\n\t\t\t\t\thandleBreakfastClick={this.handleBreakfastClick}\n\t\t\t\t\thandleLunchClick={this.handleLunchClick}\n\t\t\t\t\thandleDinnerClick={this.handleDinnerClick}\n\t\t\t\t\thandleSnackClick={this.handleSnackClick}\n\t\t\t\t\thandleSave={this.handleSave}\n\t\t\t\t/>\n\n\t\t\t\t{this.state.checkReco ? (\n\t\t\t\t\t<div className=\"button\">\n            <button className=\"saveBtn\" onClick={this.handleSave}>\n              Save selection\n            </button>\n          </div>\n\t\t\t\t) : null}\n\t\t\t\t{this.state.checkReco ? <DisplaySavedFoods /> : null}\n\t\t\t</div>\n\t\t);\n  }\n}\n\nexport default ApiCalls;\n","import React, { Component } from 'react';\nimport ApiCalls from './ApiCalls.js'\nimport './index.scss';\n\nclass App extends Component {\n\n\n  render() {\n    return (\n      <div className=\"app\">\n        <h1>A Bitter Parent</h1>\n\n        <ApiCalls />\n\n      </div>\n    )\n  }\n}\n\n\n\n  export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}