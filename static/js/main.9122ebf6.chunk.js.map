{"version":3,"sources":["components/UserSuggestion.js","components/UserFirstChoice.js","components/UserResults.js","components/Breakfast.js","components/Lunch.js","components/Dinner.js","components/Snack.js","components/UserInput.js","firebase.js","components/DisplaySavedFoods.js","ApiCalls.js","App.js","serviceWorker.js","index.js"],"names":["UserSuggestion","className","src","this","props","results","recoImage","alt","recoImageAlt","recoFoodTitle","recommendedFood","Component","UserFirstChoice","userImage","userImageAlt","userInput","usersFood","UserResults","checkUserChoice","onClick","subClick","checkReco","sugarDiff","handleSave","Breakfast","htmlFor","id","onChange","handleChange","defaultValue","disabled","value","Lunch","Dinner","Snack","UserInput","handleBreakfastClick","handleLunchClick","handleDinnerClick","handleSnackClick","breakfast","lunch","dinner","snack","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","DisplaySavedFoods","deleteActivity","key","database","ref","child","remove","state","foods","on","response","newState","data","val","push","food","setState","map","food1","userFoodName","userFoodOption","food2","userRecoName","userRecoOption","ApiCalls","unsplashCall","query","axios","url","method","responseType","params","client_id","unsplashKey","orientation","then","unsplashUrl","urls","regular","altTag","alt_description","nutritionixCall","sugar","headers","detailed","full_nutrients","sugarAmount","fatAmount","calorieAmount","proteinAmount","carbohydratesAmount","nutObj","common","i","length","attr_id","Math","round","undefined","newObj","sugarValue","floor","random","sugarAllowed","event","preventDefault","target","dbRef","firebaseObj","console","log","lte","randItem","noOfRes","food_name","small","recoSugarValue","prevProps","prevState","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9122ebf6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass UserSuggestion extends Component {\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"userSuggestion\">\r\n        <div className=\"image\">\r\n          <img\r\n            src={this.props.results.recoImage}\r\n            alt={this.props.results.recoImageAlt}\r\n          />\r\n        </div>\r\n        <div className=\"text\">\r\n          <h2>{this.props.results.recoFoodTitle}</h2>\r\n          <ul>\r\n            <li>\r\n              <span>Fat Amount:</span> {this.props.results.recommendedFood[0]}g\r\n            </li>\r\n            <li>\r\n              <span>Calories:</span> {this.props.results.recommendedFood[1]} kJ\r\n            </li>\r\n            <li>\r\n              <span>Sugar:</span> {this.props.results.recommendedFood[2]}g\r\n            </li>\r\n            <li>\r\n              <span>Protein:</span> {this.props.results.recommendedFood[3]}g\r\n            </li>\r\n            <li>\r\n              <span>Carbohydrates:</span>{\" \"}\r\n              {this.props.results.recommendedFood[4]}g\r\n            </li>\r\n          </ul>\r\n        </div>\r\n\t\t\t\t{/* <div className=\"sugarCounter\">\r\n\t\t\t\t\t<h4>The recommended item has <br/><span>{this.props.results.sugarDiff}g</span><br/>less sugar</h4>\r\n        </div> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserSuggestion;\r\n","import React, {Component, Fragment} from 'react'\r\n\r\nclass UserFirstChoice extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t\t<div className=\"image\">\r\n\t\t\t\t\t\t<img src={this.props.results.userImage} alt={this.props.results.userImageAlt} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"text\">\r\n\t\t\t\t\t\t<h2>{this.props.results.userInput}</h2>\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t<li><span>Fat Amount: </span>{this.props.results.usersFood[0]}g</li>\r\n\t\t\t\t\t\t\t<li><span>Calories:</span> {this.props.results.usersFood[1]}kJ</li>\r\n\t\t\t\t\t\t\t<li><span>Sugar: </span>{this.props.results.usersFood[2]}g</li>\r\n\t\t\t\t\t\t\t<li><span>Protein: </span>{this.props.results.usersFood[3]}g</li>\r\n\t\t\t\t\t\t\t<li><span>Carbohydrates:</span> {this.props.results.usersFood[4]}g</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t</Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default UserFirstChoice","import React, { Component, Fragment } from 'react'\r\nimport UserSuggestion from './UserSuggestion'\r\nimport UserFirstChoice from './UserFirstChoice'\r\n\r\nclass UserResults extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t{this.props.results.checkUserChoice ? (\r\n\t\t\t\t\t<div className=\"button\">\r\n\t\t\t\t\t\t<button className=\"subBtn\" onClick={this.props.subClick}>\r\n\t\t\t\t\t\t\tGive me a substitute\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : null}\r\n\r\n\t\t\t\t{this.props.results.checkReco ? (\r\n\t\t\t\t<div className=\"sugarCounter\">\r\n\t\t\t\t\t<h4>{this.props.results.recoFoodTitle} has <span>{this.props.results.sugarDiff}g</span> less sugar</h4>\r\n\t\t\t\t</div>\r\n\t\t\t\t) : null}\r\n\r\n\t\t\t\t<div className=\"userResults\">\r\n\r\n\t\t\t\t\t<div className=\"userSelection\">\r\n\t\t\t\t\t\t{this.props.results.checkUserChoice ? (\r\n\t\t\t\t\t\t\t<UserFirstChoice\r\n\t\t\t\t\t\t\t\tresults={this.props.results}\r\n\t\t\t\t\t\t\t\tsubClick={this.props.subClick}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{this.props.results.checkReco ? (\r\n\t\t\t\t\t\t<UserSuggestion\r\n\t\t\t\t\t\t\thandleSave={this.props.handleSave}\r\n\t\t\t\t\t\t\tresults={this.props.results}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t</div>\r\n\t\t\t</Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default UserResults\r\n\r\n","import React, { Component, Fragment } from \"react\";\r\nimport UserResults from \"./UserResults\";\r\n\r\nclass Breakfast extends Component {\r\n  render() {\r\n    return (\r\n\t\t<Fragment>\r\n\t\t\t<form>\r\n\t\t\t\t<label htmlFor=\"foodMenu\">Select what you would Like</label>\r\n\t\t\t\t<select id=\"foodMenu\" onChange={this.props.handleChange} defaultValue>\r\n\t\t\t\t\t<option disabled value>\r\n\t\t\t\t\t\tChoose your food\r\n\t\t\t\t\t</option>\r\n\t\t\t\t\t<option value=\"oreos\">Oreos</option>\r\n\t\t\t\t\t<option value=\"chocolate waffles\">Chocolate Waffles</option>\r\n\t\t\t\t\t<option value=\"captain crunch cereal\">\r\n\t\t\t\t\t\tCaptain Crunch Cereal\r\n\t\t\t\t\t</option>\r\n\t\t\t\t\t<option value=\"nutella sandwich\">Nutella Sandwich</option>\r\n\t\t\t\t\t<option value=\"yogurt\">Yogurt</option>\r\n\t\t\t\t\t<option value=\"muffin\">Muffin</option>\r\n\t\t\t\t\t<option value=\"egg tart\">Egg Tart</option>\r\n\t\t\t\t\t<option value=\"banana bread\">Banana Bread</option>\r\n\t\t\t\t\t<option value=\"breakfast drink\">Breakfast Drink</option>\r\n\t\t\t\t\t<option value=\"cake\">Cake</option>\r\n\t\t\t\t</select>\r\n\t\t\t</form>\r\n\t\t\t<UserResults\r\n\t\t\t\tresults={this.props.results}\r\n\t\t\t\tsubClick={this.props.subClick}\r\n\t\t\t/>\r\n\t\t</Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Breakfast;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport UserResults from \"./UserResults\";\r\n\r\nclass Lunch extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <form className=\"foodSelector\">\r\n          <label htmlFor=\"foodMenu\">Select what you would Like</label>\r\n          <select id=\"foodMenu\" onChange={this.props.handleChange} defaultValue>\r\n          <option disabled value>\r\n              Choose your food\r\n            </option>\r\n            <option value=\"teriyaki steak\">Teriyaki Steak</option>\r\n            <option value=\"jelly sandwich\">Jelly Sandwich</option>\r\n            <option value=\"baconator\">Baconator</option>\r\n            <option value=\"thai noodles\">Thai Noodles</option>\r\n            <option value=\"Caesar Salad\">Caesar Salad</option>\r\n            <option value=\"apple dumplings\">Apple Dumplings</option>\r\n            <option value=\"grilled peach\">Grilled Peaches</option>\r\n            <option value=\"mochi\">Mochi</option>\r\n            <option value=\"pork bbq burrito\">Pork BBQ Burrito</option>\r\n            <option value=\"cake\">Cake</option>\r\n          </select>\r\n        </form>\r\n        <UserResults\r\n          results={this.props.results}\r\n          subClick={this.props.subClick}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Lunch;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport UserResults from \"./UserResults\";\r\n\r\nclass Dinner extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <form>\r\n          <label htmlFor=\"foodMenu\">Select what you would Like</label>\r\n          <select id=\"foodMenu\" onChange={this.props.handleChange} defaultValue>\r\n          <option disabled value>\r\n              Choose your food\r\n            </option>\r\n            <option value=\"bbq 0ribs\">BBQ Ribs</option>\r\n            <option value=\"walnut shrimp\">Walnut Shrimp</option>\r\n            <option value=\"sesame chicken\">Sesame Chicken</option>\r\n            <option value=\"vermicelli noodles with pork\">Vermicelli Noodles with Pork</option>\r\n            <option value=\"jelly donuts\">Jelly Donuts</option>\r\n            <option value=\"cinnamon bun\">Cinnamon Buns</option>\r\n            <option value=\"fried apple pie\">Fried Apple Pie</option>\r\n            <option value=\"pulled pork\">Pulled Pork</option>\r\n            <option value=\"banana split\">Banana Split</option>\r\n            <option value=\"cake\">Cake</option>\r\n          </select>\r\n        </form>\r\n        <UserResults\r\n          results={this.props.results}\r\n          subClick={this.props.subClick}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dinner;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport UserResults from \"./UserResults\";\r\n\r\nclass Snack extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <form>\r\n          <label htmlFor=\"foodMenu\">Select what you would Like</label>\r\n          <select id=\"foodMenu\" onChange={this.props.handleChange} defaultValue>\r\n          <option disabled value>\r\n              Choose your food\r\n            </option>\r\n            <option value=\"cheesecake\">Cheesecake</option>\r\n            <option value=\"candy corn\">Candy Corn</option>\r\n            <option value=\"ice cream cake\">Ice Cream Sandwiches</option>\r\n            <option value=\"sweetened iced tea\">Sweetened Iced Tea</option>\r\n            <option value=\"apple sauce\">Applesauce</option>\r\n            <option value=\"milkshake\">Milkshake</option>\r\n            <option value=\"salted caramel pie\">Salted Caramel Pie</option>\r\n            <option value=\"chocolate milk\">Chocolate Milk</option>\r\n            <option value=\"vanilla cupcake\">Vanilla Cupcakes</option>\r\n            <option value=\"cake\">Cake</option>\r\n          </select>\r\n        </form>\r\n        <UserResults\r\n          results={this.props.results}\r\n          subClick={this.props.subClick}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Snack;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport Breakfast from './Breakfast';\r\nimport Lunch from './Lunch';\r\nimport Dinner from './Dinner';\r\nimport Snack from './Snack';\r\n// import UserResults from \"./UserResults\";\r\n\r\nclass UserInput extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"userOptions\">\r\n          <button onClick={this.props.handleBreakfastClick}>Breakfast</button>\r\n          <button onClick={this.props.handleLunchClick}>Lunch</button>\r\n          <button onClick={this.props.handleDinnerClick}>Dinner</button>\r\n          <button onClick={this.props.handleSnackClick}>Snack</button>\r\n        </div>\r\n\r\n        {this.props.results.breakfast ?\r\n          <Breakfast\r\n            results={this.props.results}\r\n            handleChange={this.props.handleChange}\r\n            subClick={this.props.subClick}\r\n          />\r\n          : null}\r\n\r\n        {this.props.results.lunch ?\r\n          <Lunch\r\n            results={this.props.results}\r\n            handleChange={this.props.handleChange}\r\n            subClick={this.props.subClick}\r\n          />\r\n          : null}\r\n\r\n        {this.props.results.dinner ?\r\n          <Dinner\r\n            results={this.props.results}\r\n            handleChange={this.props.handleChange}\r\n            subClick={this.props.subClick}\r\n          />\r\n          : null}\r\n\r\n        {this.props.results.snack ?\r\n          <Snack\r\n            results={this.props.results}\r\n            handleChange={this.props.handleChange}\r\n            subClick={this.props.subClick}\r\n          />\r\n          : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserInput;\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/database';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBpqlg35893WVbTIvvIrHL3SaFDmxaDFsc\",\r\n    authDomain: \"abitterparent.firebaseapp.com\",\r\n    databaseURL: \"https://abitterparent.firebaseio.com\",\r\n    projectId: \"abitterparent\",\r\n    storageBucket: \"abitterparent.appspot.com\",\r\n    messagingSenderId: \"1015830040041\",\r\n    appId: \"1:1015830040041:web:7edb8b23ec4e7e0e4a8f78\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  export default firebase;","import React, {Component, Fragment} from 'react'\r\nimport firebase from '../firebase'\r\n\r\nclass DisplaySavedFoods extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n          foods: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const dbRef = firebase.database().ref();\r\n        dbRef.on(\"value\", (response) => {\r\n          const newState = [];\r\n          const data = response.val();\r\n          for (let key in data) {\r\n            newState.push({\r\n              food: data[key],\r\n              key: key,\r\n            });\r\n          }\r\n          this.setState({\r\n            foods: newState,\r\n        });\r\n        });\r\n    }\r\n\r\n    deleteActivity = (key) => {\r\n        const dbRef = firebase.database().ref();\r\n        dbRef.child(key).remove();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"showFoodPairs\">\r\n                <h3>Your Suggestions:</h3>\r\n                {this.state.foods.map(({ key, food }) => {                  \r\n                    return (\r\n                        <Fragment>\r\n                            <div key={key} className=\"food\">\r\n                                <ul className=\"savedFood text\">\r\n                                    <li><h2>\r\n                                        {food.food1.userFoodName}\r\n                                    </h2></li>\r\n                                    <li>\r\n                                        <ul>\r\n                                            <li><span>Fat Amount:</span> {food.food1.userFoodOption[0]}g</li>\r\n                                            <li><span>Calories:</span> {food.food1.userFoodOption[1]}kJ</li>\r\n                                            <li><span>Sugar:</span> {food.food1.userFoodOption[2]}g</li>\r\n                                            <li><span>Protein:</span> {food.food1.userFoodOption[3]}g</li>\r\n                                            <li><span>Carbohydrates:</span> {food.food1.userFoodOption[4]}g</li>\r\n                                        </ul>\r\n                                    </li>\r\n                                </ul>\r\n\r\n                                <ul className=\"savedFood text\">\r\n                                    <li><h2>\r\n                                        {food.food2.userRecoName}\r\n                                    </h2></li>\r\n                                    <li>\r\n                                        <ul>\r\n                                            <li><span>Fat Amount:</span> {food.food2.userRecoOption[0]}g</li>\r\n                                            <li><span>Calories:</span> {food.food2.userRecoOption[1]}kJ</li>\r\n                                            <li><span>Sugar: </span>{food.food2.userRecoOption[2]}g</li>\r\n                                            <li><span>Protein: </span>{food.food2.userRecoOption[3]}g</li>\r\n                                            <li><span>Carbohydrates:</span> {food.food2.userRecoOption[4]}g</li>\r\n                                        </ul>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n\r\n                            <div className=\"button\"><button onClick={() => {\r\n                            this.deleteActivity(key);\r\n                            }}>Delete</button></div>\r\n                        </Fragment>\r\n                    );\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DisplaySavedFoods","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport UserInput from \"./components/UserInput\";\r\nimport firebase from \"./firebase\";\r\nimport DisplaySavedFoods from \"./components/DisplaySavedFoods\";\r\n\r\nclass ApiCalls extends Component {\r\n  constructor() {\r\n    super();\r\n    // setting initial state values\r\n    this.state = {\r\n      userInput: \"\",\r\n      recoFoodTitle: \"\",\r\n      sugarValue: \"\",\r\n      sugarDiff: \"\",\r\n      recoSugarValue: \"\",\r\n      usersFood: [],\r\n      recommendedFood: [],\r\n      checkReco: false,\r\n      checkUserChoice: false,\r\n      breakfast: false,\r\n      lunch: false,\r\n      dinner: false,\r\n      snack: false,\r\n      userImage: \"\",\r\n      userImageAlt: \"\",\r\n      recoImage: \"\",\r\n      recoImageAlt: \"\",\r\n      firebaseObj: {},\r\n      unsplashKey:  'XOIxVf1JifM9_NSItXssxrkEDz917Vsu03WTP2T6nbA',\r\n      //to swtich between keys when it reaches limit\r\n      // unsplashKey: 'wPc_7irjVjTU9ez7gjehFg6qAyrOd2HEkx_YY397uts',\r\n      sugarAllowed: 0,\r\n    };\r\n  }\r\n\r\n  // function that upon call makes an API request to get the food images\r\n  unsplashCall = (query) => {\r\n    axios({\r\n      url: \"https://api.unsplash.com/photos/random\",\r\n      method: \"GET\",\r\n      responseType: \"JSON\",\r\n      params: {\r\n        client_id: this.state.unsplashKey,\r\n        query: `${query}`,\r\n        orientation: \"squarish\"\r\n      },\r\n    }).then((response) => {\r\n\r\n      let unsplashUrl = response.data.urls.regular;\r\n      let altTag = response.data.alt_description;\r\n\r\n      this.setState({\r\n        userImage: unsplashUrl,\r\n        userImageAlt: altTag,\r\n      });\r\n    });\r\n  }\r\n\r\n  // function that upon call makes an API request to get information about the food\r\n  nutritionixCall = (query, sugar) => {\r\n    axios({\r\n      url: \"https://trackapi.nutritionix.com/v2/search/instant\",\r\n      method: \"POST\",\r\n      responseType: \"JSON\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-app-id\": \"2f61b616\",\r\n        \"x-app-key\": \"3c2af909b8bc091e21372b59a9e4b835\",\r\n        \"x-remote-user-id\": \"0\",\r\n      },\r\n      data: {\r\n        query: query,\r\n        detailed: true,\r\n        full_nutrients: {\r\n          \"269\": {\r\n            \"lte\": sugar\r\n          }\r\n        }\r\n      },\r\n    })\r\n      .then((response) => {\r\n\r\n        // variable that contains the response from the API call\r\n        const nutObj = response.data.common[0].full_nutrients;\r\n        let sugarAmount;\r\n        let fatAmount;\r\n        let calorieAmount;\r\n        let proteinAmount;\r\n        let carbohydratesAmount;\r\n\r\n        // looping through the response to extract the nutrition values\r\n        for (let i = 0; i < nutObj.length; i++) {\r\n          if (nutObj[i].attr_id === 269) {\r\n            sugarAmount = Math.round(nutObj[i].value);\r\n          } else if (nutObj[i].attr_id === 204) {\r\n            fatAmount = Math.round(nutObj[i].value);\r\n          } else if (nutObj[i].attr_id === 208) {\r\n            calorieAmount = Math.round(nutObj[i].value);\r\n          } else if (nutObj[i].attr_id === 203) {\r\n            proteinAmount = Math.round(nutObj[i].value);\r\n          } else if (nutObj[i].attr_id === 205) {\r\n            carbohydratesAmount = Math.round(nutObj[i].value);\r\n          }\r\n        }\r\n\r\n        // conditional statement to change the value from udefined to 0 for better visual user experience\r\n        if (fatAmount === undefined) {\r\n          fatAmount = 0;\r\n        } else if (calorieAmount === undefined) {\r\n          calorieAmount = 0;\r\n        } else if (proteinAmount === undefined) {\r\n          proteinAmount = 0;\r\n        } else if (carbohydratesAmount === undefined) {\r\n          carbohydratesAmount = 0;\r\n        }\r\n\r\n        const newObj = [\r\n          fatAmount,\r\n          calorieAmount,\r\n          sugarAmount,\r\n          proteinAmount,\r\n          carbohydratesAmount,\r\n        ];\r\n\r\n        this.setState({\r\n          usersFood: newObj,\r\n          sugarValue: sugarAmount,\r\n        });\r\n\r\n        const isWild = (Math.floor(Math.random() * 10));\r\n        if (isWild === 0) {\r\n          this.setState({\r\n            sugarAllowed: this.state.sugarValue - 5,\r\n          })\r\n        } else {\r\n          this.setState({\r\n            sugarAllowed: this.state.sugarValue - 10,\r\n          })\r\n        }\r\n    \r\n      })\r\n  }\r\n\r\n\r\n  handleChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    let userInput = this.state.userInput;\r\n    let value = event.target.value;\r\n\r\n    userInput = value;\r\n\r\n    this.setState({\r\n      userInput: userInput,\r\n      checkUserChoice: false,\r\n    });\r\n  };\r\n\r\n  // functions to set the state for sections and render the section when the respective button is clicked\r\n  handleBreakfastClick = () => {\r\n    this.setState({\r\n      breakfast: true,\r\n      lunch: false,\r\n      dinner: false,\r\n      snack: false,\r\n      checkUserChoice: false,\r\n      checkReco: false,\r\n    });\r\n  };\r\n  handleLunchClick = () => {\r\n    this.setState({\r\n      breakfast: false,\r\n      lunch: true,\r\n      dinner: false,\r\n      snack: false,\r\n      checkUserChoice: false,\r\n      checkReco: false,\r\n    });\r\n  };\r\n  handleDinnerClick = () => {\r\n    this.setState({\r\n      breakfast: false,\r\n      lunch: false,\r\n      dinner: true,\r\n      snack: false,\r\n      checkUserChoice: false,\r\n      checkReco: false,\r\n    });\r\n  };\r\n\r\n  handleSnackClick = () => {\r\n    this.setState({\r\n      breakfast: false,\r\n      lunch: false,\r\n      dinner: false,\r\n      snack: true,\r\n      checkUserChoice: false,\r\n      checkReco: false,\r\n    });\r\n  };\r\n\r\n  // upon the component update, calling the images and nutritions functions\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.userInput !== this.state.userInput) {\r\n      this.setState({\r\n        checkReco: false,\r\n        checkUserChoice: true,\r\n      });\r\n\r\n      this.unsplashCall(this.state.userInput)\r\n\r\n      this.nutritionixCall(this.state.userInput, 10000)\r\n    }\r\n  }\r\n\r\n  // function that pushes the chosen food pair to firebase\r\n  handleSave = (event) => {\r\n    event.preventDefault();\r\n    const dbRef = firebase.database().ref();\r\n    let userFoodOption = this.state.usersFood;\r\n    let userRecoOption = this.state.recommendedFood;\r\n    let userFoodName = this.state.userInput;\r\n    let userRecoName = this.state.recoFoodTitle;\r\n\r\n    const firebaseObj = {\r\n      food1: { userFoodName, userFoodOption },\r\n      food2: { userRecoName, userRecoOption },\r\n    };\r\n    dbRef.push(firebaseObj);\r\n  };\r\n\r\n  // function that sets state to render the alternative food for the user\r\n  subClick = () => {\r\n    this.setState({\r\n      checkReco: true,\r\n    });\r\n\r\n    const isWild = (Math.floor(Math.random() * 10));\r\n    if (isWild === 0) {\r\n      this.setState({\r\n        sugarAllowed: this.state.sugarValue - 5,\r\n      })\r\n    } else {\r\n      this.setState({\r\n        sugarAllowed: this.state.sugarValue - 10,\r\n      })\r\n    }\r\n    \r\n    console.log(this.state.sugarAllowed)\r\n    // an API call to get the nutrition values for the substitute food that meets the condition of less amount of sugar\r\n    axios({\r\n      url: \"https://trackapi.nutritionix.com/v2/search/instant\",\r\n      method: \"POST\",\r\n      responseType: \"JSON\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-app-id\": \"2f61b616\",\r\n        \"x-app-key\": \"3c2af909b8bc091e21372b59a9e4b835\",\r\n        \"x-remote-user-id\": \"0\",\r\n      },\r\n      data: {\r\n        query: \"vegetables || fruits || grains\",\r\n        detailed: true,\r\n        full_nutrients: {\r\n          \"269\": {\r\n            lte: this.state.sugarAllowed,\r\n          },\r\n        },\r\n      },\r\n    }).then((response) => {\r\n      let randItem;\r\n      let noOfRes = response.data.common.length;\r\n      randItem = Math.floor(Math.random() * noOfRes);\r\n\r\n      const nutObj = response.data.common[randItem].full_nutrients;\r\n      console.log(noOfRes)\r\n      console.log(response.data.common)\r\n\r\n      let sugarAmount;\r\n      let fatAmount;\r\n      let calorieAmount;\r\n      let proteinAmount;\r\n      let carbohydratesAmount;\r\n      for (let i = 0; i < nutObj.length; i++) {\r\n        if (nutObj[i].attr_id === 269) {\r\n          sugarAmount = Math.round(nutObj[i].value);\r\n        } else if (nutObj[i].attr_id === 204) {\r\n          fatAmount = Math.round(nutObj[i].value);\r\n        } else if (nutObj[i].attr_id === 208) {\r\n          calorieAmount = Math.round(nutObj[i].value);\r\n        } else if (nutObj[i].attr_id === 203) {\r\n          proteinAmount = Math.round(nutObj[i].value);\r\n        } else if (nutObj[i].attr_id === 205) {\r\n          carbohydratesAmount = Math.round(nutObj[i].value);\r\n        }\r\n      }\r\n\r\n      if (fatAmount === undefined) {\r\n        fatAmount = 0;\r\n      } else if (calorieAmount === undefined) {\r\n        calorieAmount = 0;\r\n      } else if (proteinAmount === undefined) {\r\n        proteinAmount = 0;\r\n      } else if (carbohydratesAmount === undefined) {\r\n        carbohydratesAmount = 0;\r\n      }\r\n\r\n      const newObj = [\r\n        fatAmount,\r\n        calorieAmount,\r\n        sugarAmount,\r\n        proteinAmount,\r\n        carbohydratesAmount,\r\n      ];\r\n\r\n      this.setState({\r\n        recommendedFood: newObj,\r\n        recoFoodTitle: response.data.common[randItem].food_name,\r\n        sugarDiff: this.state.sugarValue - newObj[2],\r\n      });            \r\n    });\r\n\r\n    // an API call that returns the image for the substitute food\r\n    axios({\r\n      url: 'https://api.unsplash.com/photos/random',\r\n      method: \"GET\",\r\n      responseType: \"JSON\",\r\n      params: {\r\n        client_id: this.state.unsplashKey,\r\n        query: this.state.recoFoodTitle,\r\n        orientation: \"squarish\"\r\n      },\r\n    }).then((response) => {\r\n\r\n      let unsplashUrl = response.data.urls.small;\r\n      let altTag = response.data.alt_description;\r\n\r\n      this.setState({\r\n        recoImage: unsplashUrl,\r\n        recoImageAlt: altTag,\r\n      });\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n\r\n\r\n        <UserInput\r\n          results={this.state}\r\n          handleChange={this.handleChange}\r\n          subClick={this.subClick}\r\n          handleBreakfastClick={this.handleBreakfastClick}\r\n          handleLunchClick={this.handleLunchClick}\r\n          handleDinnerClick={this.handleDinnerClick}\r\n          handleSnackClick={this.handleSnackClick}\r\n          handleSave={this.handleSave}\r\n        />\r\n\r\n        {this.state.checkReco ? (\r\n          <div className=\"button\">\r\n            <button className=\"saveBtn\" onClick={this.handleSave}>\r\n              Save selection\r\n            </button>\r\n          </div>\r\n        ) : null}\r\n        {this.state.checkReco ? <DisplaySavedFoods /> : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ApiCalls;\r\n","import React, { Component } from 'react';\r\nimport ApiCalls from './ApiCalls.js'\r\nimport './index.scss';\r\n\r\nclass App extends Component {\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <h1>A Bitter Parent</h1>\r\n\r\n        <ApiCalls />\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n  export default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}