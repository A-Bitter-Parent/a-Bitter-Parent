{"version":3,"sources":["UserResults.js","Breakfast.js","Lunch.js","Dinner.js","Snack.js","UserInput.js","App.js","serviceWorker.js","index.js"],"names":["UserResults","className","this","props","results","userInput","Component","Breakfast","handleChange","event","preventDefault","state","target","value","setState","sugarValue","usersFood","recommendedFood","fat","calories","sugar","protein","carbohydrates","prevProps","prevState","axios","url","method","responseType","headers","data","then","response","console","log","sugarAmount","fatAmount","calorieAmount","proteinAmount","carbohydratesAmount","nutObj","common","full_nutrients","i","length","attr_id","newObj","undefined","alert","htmlFor","id","onChange","Lunch","Dinner","Snack","UserInput","handleBreakfastClick","breakfast","lunch","dinner","snack","handleLunchClick","handleDinnerClick","handleSnackClick","onClick","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.610bdf64.chunk.js","sourcesContent":["import React, {Component} from 'react'\n\nclass UserResults extends Component {\n\t// constructor(props) {\n\t// \tsuper(props)\n\t// \tthis.state = {\n\t// \t\t}\n\t// \t } \n\trender() {\n\t\treturn (\n\t\t\t<div className=\"UserResults\">\n\t\t\t\t<div className=\"userSelection\">\n\t\t\t\t\t<h2>{this.props.results.userInput}</h2>\n\t\t\t\t\t\n\t\t\t\t\t<ul>\n\t\n\t\t\t\t\t</ul>\n\t\t\t\t\t{/* <img src={this.props.results.userInput.photo.thumb}/> */}\n\t\t\t\t\t{/* map through and show image, nutrient attributes carbs(205), sugars(269), fat(204), protein(203), calories(208) */}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"userSuggestion\"></div>\n\t\t\t</div>\n\t);\n\t}\n}\n\nexport default UserResults\n\n","import React, { Component } from 'react';\n// import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport UserResults from './UserResults'\n\nclass Breakfast extends Component {\n    \n    // const {userInput, setUserInput} = useState(\"\");\n    // const {sugarValue, setSugarValue} = useState(\"\");\n    // const {usersFood, setUsersFood} = useState([]);\n    // const {recommendedFood, setRecommendedFood} = useState([]);\n\n    constructor() {\n        super();\n        this.state = {\n            userInput: '',\n            sugarValue: '',\n            usersFood: [],\n            recommendedFood: {\n                fat: '', \n                calories: '',\n                sugar: '',\n                protein: '',\n                carbohydrates: '',\n            },\n        }\n    }\n\n    handleChange = (event) => {\n        event.preventDefault();\n\n        let userInput = this.state.userInput;\n        let value = event.target.value;\n\n\n        this.setState({\n            userInput: userInput,\n        })\n    }\n    \n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.userInput !== this.state.userInput) {\n            axios({\n                url: 'https://trackapi.nutritionix.com/v2/search/instant',\n                method: 'POST',\n                responseType: 'JSON',\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"x-app-id\": \"2f61b616\",\n                    \"x-app-key\": \"3c2af909b8bc091e21372b59a9e4b835\",\n                    \"x-remote-user-id\": \"0\"\n                },\n                data: {\n                    \"query\": this.state.userInput,\n                    \"detailed\": true,\n                }\n            }).then((response) => {\n                console.log(response)\n                console.log('initial request')\n\n\t\t\t\t\t\t\t\tconst nutObj = response.data.common[0].full_nutrients;\n\t\t\t\t\t\t\t\tlet sugarAmount;\n\t\t\t\t\t\t\t\tlet fatAmount;\n\t\t\t\t\t\t\t\tlet calorieAmount;\n\t\t\t\t\t\t\t\tlet proteinAmount;\n\t\t\t\t\t\t\t\tlet carbohydratesAmount;\n\t\t\t\t\t\t\t\tfor (let i=0; i<nutObj.length; i++) {\n\t\t\t\t\t\t\t\t\t\tif (nutObj[i].attr_id === 269) {\n\t\t\t\t\t\t\t\t\t\t\t\tsugarAmount =  nutObj[i].value\n\t\t\t\t\t\t\t\t\t\t} else if ( nutObj[i].attr_id === 204) {\n\t\t\t\t\t\t\t\t\t\t\t\tfatAmount =  nutObj[i].value\n\t\t\t\t\t\t\t\t\t\t} else if ( nutObj[i].attr_id === 208) {\n\t\t\t\t\t\t\t\t\t\t\t\tcalorieAmount =  nutObj[i].value\n\t\t\t\t\t\t\t\t\t\t} else if ( nutObj[i].attr_id === 203) {\n\t\t\t\t\t\t\t\t\t\t\t\tproteinAmount =  nutObj[i].value\n\t\t\t\t\t\t\t\t\t\t} else if ( nutObj[i].attr_id === 205) {\n\t\t\t\t\t\t\t\t\t\t\t\tcarbohydratesAmount =  nutObj[i].value\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tconst newObj = [fatAmount, calorieAmount, sugarAmount, proteinAmount, carbohydratesAmount];\n\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\tusersFood: newObj\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\tconsole.log(this.state.usersFood)\n            });\n        }\n\n        if  (prevState.sugarValue !== this.state.sugarValue) {\n            if (this.state.sugarValue >= 10) {\n                axios({\n                    url: 'https://trackapi.nutritionix.com/v2/search/instant',\n                    method: 'POST',\n                    responseType: 'JSON',\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        \"x-app-id\": \"2f61b616\",\n                        \"x-app-key\": \"3c2af909b8bc091e21372b59a9e4b835\",\n                        \"x-remote-user-id\": \"0\"\n                    },\n                    data: {\n                        \"query\": 'vegetables || fruits || grains || protein',\n                        \"detailed\": true,\n                        \"full_nutrients\": {\n                            \"269\": {\n                            \"lte\": this.state.sugarValue - 10,\n                            }  }\n                    }\n                }).then((response) => {\n                    console.log(response.data.common[0]);\n                    console.log('if first call is more than 10')\n                    \n                })\n            } else if (this.state.sugarValue < 10) {\n                axios({\n                    url: 'https://trackapi.nutritionix.com/v2/search/instant',\n                    method: 'POST',\n                    responseType: 'JSON',\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        \"x-app-id\": \"2f61b616\",\n                        \"x-app-key\": \"3c2af909b8bc091e21372b59a9e4b835\",\n                        \"x-remote-user-id\": \"0\"\n                    },\n                    data: {\n                        \"query\": 'vegetables || fruits || grains || protein',\n                        \"detailed\": true,\n                        \"full_nutrients\": {\n                            \"269\": {\n                            \"lte\": this.state.sugarValue,\n                            }  }\n                    }\n                }).then((response) => {\n                    console.log(response.data.common[0]);\n                    console.log('if first call is less than 10 but greater than 0')\n                    \n                    if (response.data.common[0] === undefined) {\n                        alert('Go ahead! Eat it!')\n                    }\n                })\n            } else {\n                alert('Go ahead! Eat it!')\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"breakfast\">\n                <form className='foodSelector'>\n                    <label htmlFor=\"foodMenu\">Select what you would Like</label>\n                    <select id='foodMenu' onChange={this.handleChange}>\n                        <option value=\"waffles\">Waffles</option>\n                        <option value=\"pancakes\">Pancakes</option>\n                        <option value=\"cereal\">Cereal</option>\n                        <option value=\"breakfast sandwich\">Breakfast Sandwich</option>\n                        <option value=\"yogurt\">Yogurt</option>\n                        <option value=\"fruit salad\">Fruit Salad</option>\n                        <option value=\"eggs and bacon\">Eggs and Bacon</option>\n                        <option value=\"english muffin\">English Muffin</option>\n                        <option value=\"sausage\">Sausage</option>\n                        <option value=\"cake\">Cake</option>\n                    </select>\n                </form>\n                <UserResults results={this.state}/>\n            </div>\n\n        )\n    }\n}\n\nexport default Breakfast;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Lunch extends Component {\n    constructor() {\n        super();\n        this.state = {\n            userInput: '',\n            sugarValue: '',\n            usersFood: [],\n            recommendedFood: [],\n        }\n    }\n\n    handleChange = (event) => {\n        event.preventDefault();\n\n        let userInput = this.state.userInput;\n        let value = event.target.value;\n\n        userInput = value;\n\n        this.setState({\n            userInput: userInput,\n        })\n    }\n\n    \n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.userInput !== this.state.userInput) {\n            axios({\n                url: 'https://trackapi.nutritionix.com/v2/search/instant',\n                method: 'POST',\n                responseType: 'JSON',\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"x-app-id\": \"2f61b616\",\n                    \"x-app-key\": \"3c2af909b8bc091e21372b59a9e4b835\",\n                    \"x-remote-user-id\": \"0\"\n                },\n                data: {\n                    \"query\": this.state.userInput,\n                    \"detailed\": true,\n                }\n            }).then((response) => {\n    \n                const nutObj = response.data.common[0].full_nutrients;\n                let sugarAmount;\n                for (let i=0; i<nutObj.length; i++) {\n                    if (nutObj[i].attr_id === 269) {\n                        sugarAmount =  nutObj[i].value\n    \n                    }\n                }\n                \n                this.setState({\n                    sugarValue: sugarAmount\n                })\n                console.log(this.state.sugarValue);\n            });\n        }\n\n        if  (prevState.sugarValue !== this.state.sugarValue) {\n            if (this.state.sugarValue >= 10) {\n                axios({\n                    url: 'https://trackapi.nutritionix.com/v2/search/instant',\n                    method: 'POST',\n                    responseType: 'JSON',\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        \"x-app-id\": \"2f61b616\",\n                        \"x-app-key\": \"3c2af909b8bc091e21372b59a9e4b835\",\n                        \"x-remote-user-id\": \"0\"\n                    },\n                    data: {\n                        \"query\": 'vegetables || fruits || grains || protein',\n                        \"detailed\": true,\n                        \"full_nutrients\": {\n                            \"269\": {\n                              \"lte\": this.state.sugarValue - 10,\n                            }  }\n                    }\n                }).then((response) => {\n                    console.log(response.data.common[0]);\n                })\n            } else if (this.state.sugarValue < 10) {\n                axios({\n                    url: 'https://trackapi.nutritionix.com/v2/search/instant',\n                    method: 'POST',\n                    responseType: 'JSON',\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        \"x-app-id\": \"2f61b616\",\n                        \"x-app-key\": \"3c2af909b8bc091e21372b59a9e4b835\",\n                        \"x-remote-user-id\": \"0\"\n                    },\n                    data: {\n                        \"query\": 'vegetables || fruits || grains || protein',\n                        \"detailed\": true,\n                        \"full_nutrients\": {\n                            \"269\": {\n                              \"lte\": this.state.sugarValue,\n                            }  }\n                    }\n                }).then((response) => {\n                    console.log(response.data.common[0]);\n                    if (response.data.common[0] === undefined) {\n                        alert('Go ahead! Eat it!')\n                    }\n                })\n            } else {\n                alert('Go ahead! Eat it!')\n            }\n\n        }\n\n    }\n\n    render() {\n        return (\n            <div className=\"lunch\">\n                <form className='foodSelector'>\n                    <label htmlFor=\"foodMenu\">Select what you would Like</label>\n                    <select id='foodMenu' onChange={this.handleChange}>\n                        <option value=\"ice cream\">Ice cream</option>\n                        <option value=\"pancakes\">Pancakes</option>\n                        <option value=\"cereal\">Cereal</option>\n                        <option value=\"breakfast sandwich\">Breakfast Sandwich</option>\n                        <option value=\"yogurt\">Yogurt</option>\n                        <option value=\"fruit salad\">Fruit Salad</option>\n                        <option value=\"eggs and bacon\">Eggs and Bacon</option>\n                        <option value=\"english muffin\">English Muffin</option>\n                        <option value=\"sausage\">Sausage</option>\n                        <option value=\"cake\">Cake</option>\n                    </select>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Lunch;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Dinner extends Component {\n    constructor() {\n        super();\n        this.state = {\n            userInput: '',\n            sugarValue: '',\n            usersFood: [],\n            recommendedFood: [],\n        }\n    }\n\n    handleChange = (event) => {\n        event.preventDefault();\n\n        let userInput = this.state.userInput;\n        let value = event.target.value;\n\n        userInput = value;\n\n        this.setState({\n            userInput: userInput,\n        })\n    }\n\n    \n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.userInput !== this.state.userInput) {\n            axios({\n                url: 'https://trackapi.nutritionix.com/v2/search/instant',\n                method: 'POST',\n                responseType: 'JSON',\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"x-app-id\": \"2f61b616\",\n                    \"x-app-key\": \"3c2af909b8bc091e21372b59a9e4b835\",\n                    \"x-remote-user-id\": \"0\"\n                },\n                data: {\n                    \"query\": this.state.userInput,\n                    \"detailed\": true,\n                }\n            }).then((response) => {\n    \n                const nutObj = response.data.common[0].full_nutrients;\n                let sugarAmount;\n                for (let i=0; i<nutObj.length; i++) {\n                    if (nutObj[i].attr_id === 269) {\n                        sugarAmount =  nutObj[i].value\n    \n                    }\n                }\n                \n                this.setState({\n                    sugarValue: sugarAmount\n                })\n                console.log(this.state.sugarValue);\n            });\n        }\n\n        if  (prevState.sugarValue !== this.state.sugarValue) {\n            if (this.state.sugarValue >= 10) {\n                axios({\n                    url: 'https://trackapi.nutritionix.com/v2/search/instant',\n                    method: 'POST',\n                    responseType: 'JSON',\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        \"x-app-id\": \"2f61b616\",\n                        \"x-app-key\": \"3c2af909b8bc091e21372b59a9e4b835\",\n                        \"x-remote-user-id\": \"0\"\n                    },\n                    data: {\n                        \"query\": 'vegetables || fruits || grains || protein',\n                        \"detailed\": true,\n                        \"full_nutrients\": {\n                            \"269\": {\n                              \"lte\": this.state.sugarValue - 10,\n                            }  }\n                    }\n                }).then((response) => {\n                    console.log(response.data.common[0]);\n                })\n            } else if (this.state.sugarValue < 10) {\n                axios({\n                    url: 'https://trackapi.nutritionix.com/v2/search/instant',\n                    method: 'POST',\n                    responseType: 'JSON',\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        \"x-app-id\": \"2f61b616\",\n                        \"x-app-key\": \"3c2af909b8bc091e21372b59a9e4b835\",\n                        \"x-remote-user-id\": \"0\"\n                    },\n                    data: {\n                        \"query\": 'vegetables || fruits || grains || protein',\n                        \"detailed\": true,\n                        \"full_nutrients\": {\n                            \"269\": {\n                              \"lte\": this.state.sugarValue,\n                            }  }\n                    }\n                }).then((response) => {\n                    console.log(response.data.common[0]);\n                    if (response.data.common[0] === undefined) {\n                        alert('Go ahead! Eat it!')\n                    }\n                })\n            } else {\n                alert('Go ahead! Eat it!')\n            }\n\n        }\n\n    }\n\n    render() {\n        return (\n            <div className=\"dinner\">\n                <form className='foodSelector'>\n                    <label htmlFor=\"foodMenu\">Select what you would Like</label>\n                    <select id='foodMenu' onChange={this.handleChange}>\n                        <option value=\"syrup\">Syrup</option>\n                        <option value=\"pancakes\">Pancakes</option>\n                        <option value=\"cereal\">Cereal</option>\n                        <option value=\"breakfast sandwich\">Breakfast Sandwich</option>\n                        <option value=\"yogurt\">Yogurt</option>\n                        <option value=\"fruit salad\">Fruit Salad</option>\n                        <option value=\"eggs and bacon\">Eggs and Bacon</option>\n                        <option value=\"english muffin\">English Muffin</option>\n                        <option value=\"sausage\">Sausage</option>\n                        <option value=\"cake\">Cake</option>\n                    </select>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Dinner;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Snack extends Component {\n    constructor() {\n        super();\n        this.state = {\n            userInput: '',\n            sugarValue: '',\n            usersFood: [],\n            recommendedFood: [],\n        }\n    }\n\n    handleChange = (event) => {\n        event.preventDefault();\n\n        let userInput = this.state.userInput;\n        let value = event.target.value;\n\n        userInput = value;\n\n        this.setState({\n            userInput: userInput,\n        })\n    }\n\n    \n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.userInput !== this.state.userInput) {\n            axios({\n                url: 'https://trackapi.nutritionix.com/v2/search/instant',\n                method: 'POST',\n                responseType: 'JSON',\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"x-app-id\": \"2f61b616\",\n                    \"x-app-key\": \"3c2af909b8bc091e21372b59a9e4b835\",\n                    \"x-remote-user-id\": \"0\"\n                },\n                data: {\n                    \"query\": this.state.userInput,\n                    \"detailed\": true,\n                }\n            }).then((response) => {\n    \n                const nutObj = response.data.common[0].full_nutrients;\n                let sugarAmount;\n                for (let i=0; i<nutObj.length; i++) {\n                    if (nutObj[i].attr_id === 269) {\n                        sugarAmount =  nutObj[i].value\n    \n                    }\n                }\n                \n                this.setState({\n                    sugarValue: sugarAmount\n                })\n                console.log(this.state.sugarValue);\n            });\n        }\n\n        if  (prevState.sugarValue !== this.state.sugarValue) {\n            if (this.state.sugarValue >= 10) {\n                axios({\n                    url: 'https://trackapi.nutritionix.com/v2/search/instant',\n                    method: 'POST',\n                    responseType: 'JSON',\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        \"x-app-id\": \"2f61b616\",\n                        \"x-app-key\": \"3c2af909b8bc091e21372b59a9e4b835\",\n                        \"x-remote-user-id\": \"0\"\n                    },\n                    data: {\n                        \"query\": 'vegetables || fruits || grains || protein',\n                        \"detailed\": true,\n                        \"full_nutrients\": {\n                            \"269\": {\n                              \"lte\": this.state.sugarValue - 10,\n                            }  }\n                    }\n                }).then((response) => {\n                    console.log(response.data.common[0]);\n                })\n            } else if (this.state.sugarValue < 10) {\n                axios({\n                    url: 'https://trackapi.nutritionix.com/v2/search/instant',\n                    method: 'POST',\n                    responseType: 'JSON',\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        \"x-app-id\": \"2f61b616\",\n                        \"x-app-key\": \"3c2af909b8bc091e21372b59a9e4b835\",\n                        \"x-remote-user-id\": \"0\"\n                    },\n                    data: {\n                        \"query\": 'vegetables || fruits || grains || protein',\n                        \"detailed\": true,\n                        \"full_nutrients\": {\n                            \"269\": {\n                              \"lte\": this.state.sugarValue,\n                            }  }\n                    }\n                }).then((response) => {\n                    console.log(response.data.common[0]);\n                    if (response.data.common[0] === undefined) {\n                        alert('Go ahead! Eat it!')\n                    }\n                })\n            } else {\n                alert('Go ahead! Eat it!')\n            }\n\n        }\n\n    }\n\n    render() {\n        return (\n            <div className=\"snack\">\n                <form className='foodSelector'>\n                    <label htmlFor=\"foodMenu\">Select what you would Like</label>\n                    <select id='foodMenu' onChange={this.handleChange}>\n                        <option value=\"candy\">Candy</option>\n                        <option value=\"pancakes\">Pancakes</option>\n                        <option value=\"cereal\">Cereal</option>\n                        <option value=\"breakfast sandwich\">Breakfast Sandwich</option>\n                        <option value=\"yogurt\">Yogurt</option>\n                        <option value=\"fruit salad\">Fruit Salad</option>\n                        <option value=\"eggs and bacon\">Eggs and Bacon</option>\n                        <option value=\"english muffin\">English Muffin</option>\n                        <option value=\"sausage\">Sausage</option>\n                        <option value=\"cake\">Cake</option>\n                    </select>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Snack;","import React, { Component } from 'react';\nimport Breakfast from './Breakfast';\nimport Lunch from './Lunch';\nimport Dinner from './Dinner';\nimport Snack from './Snack';\n\nclass UserInput extends Component {\n    constructor() {\n        super();\n        this.state = {\n        breakfast: false,\n        lunch: false,\n        dinner: false,\n        snack: false,\n        };\n        // this.handleClick = this.handleClick.bind(this);\n        // this.handleUserClick = this.handleUserClick.bind(this);\n    }\n\n    handleBreakfastClick = () => {\n        this.setState({\n        breakfast: true,\n        lunch: false,\n        dinner: false,\n        snack: false,\n        });\n    }\n    handleLunchClick = () => {\n        this.setState({\n        breakfast: false,\n        lunch: true,\n        dinner: false,\n        snack: false,\n        });\n    }\n    handleDinnerClick = () => {\n        this.setState({\n        breakfast: false,\n        lunch: false,\n        dinner: true,\n        snack: false,\n        });\n    }\n    handleSnackClick = () => {\n        this.setState({\n        breakfast: false,\n        lunch: false,\n        dinner: false,\n        snack: true,\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"userInput\">\n\n                <button onClick={this.handleBreakfastClick}>Breakfast</button>\n                <button onClick={this.handleLunchClick}>Lunch</button>\n                <button onClick={this.handleDinnerClick}>Dinner</button>\n                <button onClick={this.handleSnackClick}>Snack</button>\n                \n                {this.state.breakfast ? <Breakfast /> : null}\n                {this.state.lunch ? <Lunch /> : null}\n                {this.state.dinner ? <Dinner /> : null}\n                {this.state.snack ? <Snack /> : null}\n            </div>\n\n                //fats(204), carbs(205), proteins(203), sugars(269), image(photo.thumb), calories(208)\n        )\n    }\n}\n\nexport default UserInput;","import React, { Component } from 'react';\nimport UserInput from './UserInput'\nimport axios from 'axios';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      userInput: '',\n    }\n  }\n\n  // componentDidMount() {\n  //   axios({\n  //     url: 'https://trackapi.nutritionix.com/v2/search/instant',\n  //     method: 'POST',\n  //     responseType: 'JSON',\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //       \"x-app-id\": \"b944f3bc\",\n  //       \"x-app-key\": \"7d87ed834750e86fd47843d47937c909\",\n  //       \"x-remote-user-id\": \"0\"\n  //     },\n  //     data: {\n  //       \"query\": this.state.userInput,\n  //       \"detailed\": true,\n  //       // \"full_nutrients\": {\n  //       //   \"269\": {\n  //       //     \"lte\": 5\n  //       //   }\n  //       // },\n  //     }\n  //   }).then((response) => {\n  //     // let randomFood = Math.floor(Math.random() * 20);\n  //     console.log(response.data.common);\n      \n  //     // this.setState({\n\n  //     // });\n  //   });\n  // }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <h1>A Bitter Parent</h1>\n\n        <UserInput userInput={this.state.userInput}/>\n\n      </div>\n    )\n  }\n}\n\n\n\n  export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}